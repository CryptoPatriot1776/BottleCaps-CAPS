policy_module(caps, 1.100.1)

########################################
#
# Declarations
#

type caps_t;
type caps_exec_t;
init_daemon_domain(caps_t, caps_exec_t)

permissive caps_t;

type caps_initrc_exec_t;
init_script_file(caps_initrc_exec_t)

type caps_conf_t;
files_type(caps_conf_t)

type caps_var_lib_t;
files_type(caps_var_lib_t)

type caps_var_run_t;
files_type(caps_var_run_t)

type caps_port_t;
corenet_port(caps_port_t)

########################################
#
# caps local policy
#
allow caps_t self:process { fork };

allow caps_t self:fifo_file rw_fifo_file_perms;
allow caps_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(caps_t, caps_conf_t, caps_conf_t)
manage_files_pattern(caps_t, caps_conf_t, caps_conf_t)

manage_dirs_pattern(caps_t, caps_var_lib_t, caps_var_lib_t)
manage_files_pattern(caps_t, caps_var_lib_t, caps_var_lib_t)
files_var_lib_filetrans(caps_t, caps_var_lib_t, { dir file })

manage_dirs_pattern(caps_t, caps_var_run_t, caps_var_run_t)
manage_files_pattern(caps_t, caps_var_run_t, caps_var_run_t)

sysnet_dns_name_resolve(caps_t)
corenet_all_recvfrom_unlabeled(caps_t)

allow caps_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(caps_t)
corenet_tcp_sendrecv_generic_node(caps_t)
corenet_tcp_sendrecv_all_ports(caps_t)
corenet_tcp_bind_generic_node(caps_t)

gen_require(`
    type caps_port_t;
')
allow caps_t caps_port_t:tcp_socket name_bind;

gen_require(`
    type caps_port_t;
')
allow caps_t caps_port_t:tcp_socket name_connect;

domain_use_interactive_fds(caps_t)

files_read_etc_files(caps_t)

miscfiles_read_localization(caps_t)

sysnet_dns_name_resolve(caps_t)

allow caps_t caps_exec_t:file execute_no_trans;
allow caps_t self:process setsched;
corecmd_exec_ls(caps_t)
corenet_tcp_connect_http_port(caps_t)
dev_read_urand(caps_t)
fs_getattr_xattr_fs(caps_t)
kernel_read_system_state(caps_t)
